name: Deploy - 04 Backend service

on:
  workflow_dispatch:

jobs:
  backend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.VPS_SSH_KEY }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_SSH_PORT: ${{ secrets.VPS_SSH_PORT }}
          VPS_HOST_KEY: ${{ secrets.VPS_HOST_KEY }}
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          port=${VPS_SSH_PORT:-22}
          if [ -n "${VPS_HOST_KEY:-}" ]; then
            echo "$VPS_HOST_KEY" >> ~/.ssh/known_hosts
          else
            ssh-keyscan -p "$port" -H "$VPS_HOST" >> ~/.ssh/known_hosts 2>/dev/null || true
          fi
          chmod 644 ~/.ssh/known_hosts

      - name: Create backend env file locally
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DEBUG: ${{ secrets.DEBUG }}
          ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          CORS_ALLOWED_ORIGINS: ${{ secrets.CORS_ALLOWED_ORIGINS }}
        run: |
          set -euo pipefail
          mkdir -p deploy
          : > deploy/backend.env
          printf 'SECRET_KEY=%s\n' "${SECRET_KEY:-}" >> deploy/backend.env
          printf 'DEBUG=%s\n' "${DEBUG:-false}" >> deploy/backend.env
          printf 'ALLOWED_HOSTS=%s\n' "${ALLOWED_HOSTS:-localhost,127.0.0.1}" >> deploy/backend.env
          printf 'DB_NAME=%s\n' "${DB_NAME:-resolwe}" >> deploy/backend.env
          printf 'DB_USER=%s\n' "${DB_USER:-resolwe}" >> deploy/backend.env
          printf 'DB_PASSWORD=%s\n' "${DB_PASSWORD:-resolwe}" >> deploy/backend.env
          printf 'DB_HOST=%s\n' "${DB_HOST:-localhost}" >> deploy/backend.env
          printf 'DB_PORT=%s\n' "${DB_PORT:-5432}" >> deploy/backend.env
          printf 'ADMIN_USERNAME=%s\n' "${ADMIN_USERNAME:-admin}" >> deploy/backend.env
          printf 'ADMIN_PASSWORD=%s\n' "${ADMIN_PASSWORD:-}" >> deploy/backend.env
          printf 'CORS_ALLOWED_ORIGINS=%s\n' "${CORS_ALLOWED_ORIGINS:-}" >> deploy/backend.env

      - name: Upload backend code and configs
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_SSH_PORT: ${{ secrets.VPS_SSH_PORT }}
        run: |
          set -euo pipefail
          port=${VPS_SSH_PORT:-22}
          
          # Create directories
          ssh -o BatchMode=yes -o StrictHostKeyChecking=yes -p "$port" -i ~/.ssh/id_ed25519 "${VPS_USER}@${VPS_HOST}" 'mkdir -p /home/$USER/dicty_resolwe_server /home/$USER/dicty_env'
          
          # Upload backend code (excluding data and __pycache__)
          rsync -avz --delete --exclude 'data/' --exclude '__pycache__/' --exclude '*.pyc' --exclude 'venv/' -e "ssh -p $port -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=yes" backend/ "${VPS_USER}@${VPS_HOST}:/home/${VPS_USER}/dicty_resolwe_server/backend/"
          
          # Upload deployment scripts
          scp -P "$port" -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=yes deploy/scripts/backend_deploy.sh "${VPS_USER}@${VPS_HOST}:/home/${VPS_USER}/dicty_resolwe_server/deploy/scripts/backend_deploy.sh"
          scp -P "$port" -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=yes deploy/systemd/dicty-backend.service "${VPS_USER}@${VPS_HOST}:/home/${VPS_USER}/dicty_resolwe_server/deploy/systemd/dicty-backend.service"
          
          # Upload backend env
          scp -P "$port" -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=yes deploy/backend.env "${VPS_USER}@${VPS_HOST}:/home/${VPS_USER}/dicty_env/backend.env"
          
          # Make scripts executable
          ssh -o BatchMode=yes -o StrictHostKeyChecking=yes -p "$port" -i ~/.ssh/id_ed25519 "${VPS_USER}@${VPS_HOST}" 'chmod +x /home/$USER/dicty_resolwe_server/deploy/scripts/backend_deploy.sh'

      - name: Install systemd service
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_SSH_PORT: ${{ secrets.VPS_SSH_PORT }}
          VPS_SUDO_PASSWORD: ${{ secrets.VPS_SUDO_PASSWORD }}
        run: |
          set -euo pipefail
          port=${VPS_SSH_PORT:-22}
          if [ -n "${VPS_SUDO_PASSWORD:-}" ]; then
            pw_b64=$(printf '%s' "$VPS_SUDO_PASSWORD" | base64)
            ssh -o BatchMode=yes -o StrictHostKeyChecking=yes -p "$port" -i ~/.ssh/id_ed25519 "${VPS_USER}@${VPS_HOST}" "PW=\$(echo \"$pw_b64\" | base64 -d); echo \"\$PW\" | sudo -S -p '' cp /home/\$USER/dicty_resolwe_server/deploy/systemd/dicty-backend.service /etc/systemd/system/"
          else
            ssh -o BatchMode=yes -o StrictHostKeyChecking=yes -p "$port" -i ~/.ssh/id_ed25519 "${VPS_USER}@${VPS_HOST}" 'sudo cp /home/$USER/dicty_resolwe_server/deploy/systemd/dicty-backend.service /etc/systemd/system/'
          fi

      - name: Deploy backend
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_SSH_PORT: ${{ secrets.VPS_SSH_PORT }}
          VPS_SUDO_PASSWORD: ${{ secrets.VPS_SUDO_PASSWORD }}
        run: |
          set -euo pipefail
          port=${VPS_SSH_PORT:-22}
          if [ -n "${VPS_SUDO_PASSWORD:-}" ]; then
            pw_b64=$(printf '%s' "$VPS_SUDO_PASSWORD" | base64)
            ssh -o BatchMode=yes -o StrictHostKeyChecking=yes -p "$port" -i ~/.ssh/id_ed25519 "${VPS_USER}@${VPS_HOST}" "PW=\$(echo \"$pw_b64\" | base64 -d); echo \"\$PW\" | sudo -S -p '' -v; bash /home/\$USER/dicty_resolwe_server/deploy/scripts/backend_deploy.sh"
          else
            ssh -o BatchMode=yes -o StrictHostKeyChecking=yes -p "$port" -i ~/.ssh/id_ed25519 "${VPS_USER}@${VPS_HOST}" 'bash /home/$USER/dicty_resolwe_server/deploy/scripts/backend_deploy.sh'
          fi
